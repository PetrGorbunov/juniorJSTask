<apex:page showHeader="false" sidebar="false" standardStylesheets="false" controller="GetRecordsWithJsUCController">
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" />
    <!-- <script type="text/javascript" src="http://documentcloud.github.com/underscore/underscore-min.js"></script> -->
    <apex:includeScript value="{!$Resource.undercore}"/>

    <script src="{!URLFOR($Resource.jqueryui, 'jquery-ui-1.12.1.custom/jquery-ui.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.jqueryui, 'jquery-ui-1.12.1.custom/jquery-ui.css')}"/>

    <style type="text/css">
        ul.dropdown li { position: relative; }
        ul.dropdown,
        ul.dropdown-inside {
            list-style-type: none;
            padding: 0;
        }
        ul.dropdown-inside {
            position: absolute;
            left: -9999px;
        }
        ul.dropdown li.dropdown-top {
            display: inline;
            float: left;
            margin: 0 1px 0 0;
        }
        ul.dropdown li.dropdown-top a {
            padding: 3px 10px 4px;
            display: block;
        }
        ul.dropdown a.dropdown-top { background: #efefef; }
        ul.dropdown a.dropdown-top:hover { padding: 2px 10px 5px; }
        ul.dropdown li.dropdown-top:hover .dropdown-inside {
            display: block;
            left: 0;
        }
        ul.dropdown .dropdown-inside { background: #fff; }
        ul.dropdown .dropdown-inside a:hover { background: #efefef; }
    </style>

    <div id="Errors" ></div>
    <!-- <div id="hello">Hello undercore &#9650; &#9660; &#8592; &larr;</div> -->
    
    <div id="divTableNames"></div>
    <div id="divTableFields"></div>
    
    <div id="spiner" > 
        <img src="/img/loading32.gif" /> 
    </div>

    <div id="divResultTable">
        <table id="resultTableTag" border="1">
            <thead id="tableHead"></thead>
            <tbody id="tableBody"></tbody>            
        </table>    

        <div id="pagination">
            <select id="rowsOnPage" onchange="changePagination(this)">
                <option value="5" >5</option>
                <option value="10" >10</option>
                <option value="18" >18</option>

                <option value="25" >25</option>
                <option value="50" >50</option>
            </select>

            <button id="firstPage">&lt;&lt;</button>
            <button id="prevPage">&lt;</button>
            <input id="currentPage" type="text" value="1" />
            <span id="pagesCount"></span>
            <button id="nextPage">&gt;</button>
            <button id="lastPage">&gt;&gt;</button>
        </div>
    </div>

    <div id="buttonEditBlock" >
        <button onclick="editRows()" id="buttonEdit" >Change</button>
    </div>


    <script type="text/javascript">
        // $('#hello').text('NEW TEXT  &#9650; &#9660; &#8592; &larr; ');

        console.log('UNDERSCORE_IS_WORKING=' + _.isEmpty({}));

        $('#spiner').show();
        $('#divResultTable').hide();
        $('#buttonEditBlock').hide();


        Visualforce.remoting.Manager.invokeAction(
            '{!$RemoteAction.GetRecordsWithJsUCController.getTableNames}',            
            function(result, event) {
                $('#spiner').hide();

                if (event.status) {
                    tables = [];
                    for (var iter = 0; iter < result.length; iter++) {  
                        tables.push({name: result[iter]}); 
                    }     
                    tableNamesView = $("#tmpTableNames").html();
                    $('#divTableNames').append(_.template(tableNamesView, {tables: tables}));               
                } 
                else if (event.type === 'exception') {
                    $("#Errors").text(event.message + ". Look:" + event.where);
                } 
                else {
                    $("#Errors").text(event.message);
                }
            },
            {escape: false}
        );

        function getFields(tableName) { 
            $("#divTableFields").empty();    
            $('#spiner').show();
            $('#divResultTable').hide();
            $('#buttonEditBlock').hide();

            
            // $('#pagination').hide();

            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.GetRecordsWithJsUCController.getFields}',
                tableName.value,
                function(result, event) {
                    if (event.status) {      
                        $('#spiner').hide();            
                       
                        fields = [];
                        for (var iter = 0; iter < result.length; iter++) {  
                            fields.push({name: result[iter]}); 
                        }
                        if (fields.length > 0) {                        
                            tableFieldsView = $("#tmpFieldNames").html();
                            $('#divTableFields').append(_.template(tableFieldsView, {fields: fields}));
                        }
                    } 
                    else if (event.type === 'exception') {
                        $("#Errors").text(event.message + ". Look:" + event.where);
                    } 
                    else {
                        $("#Errors").text(event.message);
                    }
                },
                {escape: false}
            );                        
        }

        function runQuery(field, direction) {
            $('#spiner').show();
            $('#divResultTable').hide();
            $('#tableHead').empty();
            $('#tableBody').empty();
            $('#buttonEditBlock').hide();


            console.log('field=' + field);
            console.log('direction=' + direction);

            tableName = $("#selectTableNames").val();
            fieldsName = $("#selectFieldNames").val(); 
            if (_.indexOf(fieldsName, 'Id') == -1) {
                console.log('no Id');
                fieldsName.unshift('Id');
            }

            console.log('fieldsName[0]=' + fieldsName[0]);
            console.log('selectTableNames=' + tableName);
            console.log('fieldsName=' + fieldsName);

            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.GetRecordsWithJsUCController.runQuery}',
                tableName,
                fieldsName,
                field,
                direction,
                function(result, event) {
                    if (event.status) {   
                        $('#spiner').hide();
                        $("#currentPage").val(1);  
                        $('#divResultTable').show();


                        console.log('FROM runQuery()');
                        console.log('result=' + result);
                        if (result.length == 0) {
                            $('#divResultTable').hide();
                            return;
                        }
                        //for head
                        heads = [];
                        for (var iter = 0; iter < fieldsName.length; iter++) {
                            if (fieldsName[iter] == field) {
                                heads.push({
                                    "name" : fieldsName[iter],
                                    "isSort" : true,
                                    "direction" : direction,
                                    "isEdit" : result[0].fieldsList[iter].isEdit
                                });  
                                console.log('SPARTA:TRUE:direction=' + direction + ';name=' + fieldsName[iter] + ';field=' + field);  
                            }
                            else {
                                heads.push({
                                    "name" : fieldsName[iter],
                                    "isSort" : false,
                                    "direction" : direction,
                                    "isEdit" : result[0].fieldsList[iter].isEdit
                                });
                            }
                        }

                        console.log('heads.length=' + heads.length);
                        resultTableHeadView = $("#tmpResultTableHead").html();
                        $('#tableHead').append(_.template(resultTableHeadView, {heads: heads}));


                        // for body


                        var isR = "" 
                        if ( !result[0].fieldsList[0].isEdit ) {
                            isR = "disabled";
                        }
                        console.log('field.isEdit=' + result[0].fieldsList[0].isEdit + ';isR=' + isR);

                        console.log('result[0].fieldsList[0].fieldName=' + result[0].fieldsList[0].fieldValue);
                        console.log('result[0].fieldsList[0].isEdit=' + result[0].fieldsList[0].isEdit);

                        records = [];

                        for (var iter = 0; iter < result.length; iter++) {
                            records.push({
                                object: result[iter]
                            });
                        }

                        paginationControl(records);

                        // resultTableBodyView = $("#tmpResultTableBody").html();
                        // $('#tableBody').append(_.template(resultTableBodyView, {records: records}));



                    }
                    else if (event.type === 'exception') {
                        $("#Errors").text(event.message + ". Look:" + event.where);
                    } 
                    else {
                        $("#Errors").text(event.message);
                    }
                },
                {escape: false}
            );
        }

        function editRows() {
            console.log('from edit rows');
            $('#spiner').show();
            $('#buttonEditBlock').hide();


            var tableForChange = [];            
            $("#resultTableTag thead>tr,#resultTableTag tr[type='Edited']").each(function() { 
                var arrayCurrentRow = [];
                var elementCurrentRow = $(this).find('td');
                if (elementCurrentRow.length > 0) {
                    elementCurrentRow.each(function() {
                        if( $(this).attr('edit') == 'true' || $(this).index() == 0) {
                            cellValue = $(this).clone().children().remove().end().text().replace(/\r|\n/g, '').trim(); 
                            arrayCurrentRow.push(cellValue);
                        }
                    });
                    tableForChange.push(arrayCurrentRow);
                }
            });

            var myJsonString = JSON.stringify(tableForChange);
            console.log('myJsonString=' + myJsonString);
            console.log('tableForChange.length=' + tableForChange.length);
            console.log('tableForChange[0].length=' + tableForChange[0].length);
            console.log('tableForChange[1].length=' + tableForChange[1].length);


            var tableName = $("#selectTableNames").val();
            console.log('tableName=' + tableName);

            Visualforce.remoting.Manager.invokeAction(
                '{!$RemoteAction.GetRecordsWithJsUCController.saveListObjects}',
                myJsonString,
                tableName,
                function(result, event) {
                    if (event.status) {
                        $('#spiner').hide();

                        console.log('from  GetRecordsWithJsUCController.saveListObjects()');
                        // $("#spiner").hide();
                    }       
                    else if (event.type === 'exception') {
                        $('#spiner').hide();
                        $("#Errors").text(event.message + ". Look:" + event.where);
                    } 
                    else {
                        $('#spiner').hide();
                        $("#Errors").text(event.message);
                    }
                },
                {escape: false}
            );


        }

        function changePagination(rowsCount) {
            // var rowsPageCount = rowsCount.value;
            $("#currentPage").val('1');
            paginationControl(records);
        }

        //SUPPORT FUNCTION
        function getDataView(dateFromBase, isDateOnly) {
            var myDate = new Date(dateFromBase);
            var day = myDate.getDate();
            day = (day < 10) ? "0" + day : day; 

            var month = myDate.getMonth() + 1;
            month = (month < 10) ? "0" + month : month;

            var hour = myDate.getHours();
            hour = (hour < 10) ? "0" + hour : hour;

            var minut = myDate.getMinutes();
            minut = (minut < 10) ? "0" + minut : minut;

            var second = myDate.getSeconds();
            second = (second < 10) ? "0" + second : second;

            // if (month < 10) {
            //     month = "0" + month;
            // }
            var year = myDate.getFullYear();

            if (isDateOnly) {
                dateStr = year + '-' + month + '-' + day;
            }
            else {
                dateStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minut + ':' + second;
            }

            return dateStr;
        }

        function getReference(ref) {
            return 'https://ap2.salesforce.com/' + ref;
        }

        // <!-- <a href=""></a> 'https://ap2.salesforce.com/' -->getReference

        function openDatepicker(action) {
            console.log('from openDatepicker()');
            console.log('action=' + action.val);
            var oldValue = $(action).val();
            // $(action).find('input')

            $(action).datepicker({
                dateFormat: "yy-mm-dd",
                onSelect: function(dateText, inst) {
                    $("#buttonEditBlock").show();
                    console.log('onSelect datepicker');
                    var val = $(this).val();
                    console.log('onSelect val=' + val);

                    $(this).parents("tr").attr("type", "Edited");
                    $(this).parent().empty().html(val);
                },
                onClose: function(selectedDate) {
                    $(this).parent().empty().html(oldValue);
                }
            }).focus();
        }

        function paginationControl(records) {
            $('#tableBody').empty();

            rowsPageCount = $("#rowsOnPage").val();
            console.log('from pagination');
            console.log('rowsPageCount=' + rowsPageCount);
            console.log('records.length=' + records.length);
            recordsCount = records.length;
            pagesCount = Math.ceil(records.length/rowsPageCount);
            $('#pagesCount').empty().text(pagesCount);
            console.log('pagesCount=' + pagesCount);

            currentPage = $("#currentPage").val();
            console.log('currentPage=' + currentPage);

            startRecord = (currentPage - 1) * rowsPageCount;
            finishRecord = currentPage * rowsPageCount - 1;
            if (finishRecord >= recordsCount) {
                finishRecord = recordsCount - 1;
            }
            console.log(startRecord + ' FROM ' + finishRecord);

            recordsView = [];
            for (var i = startRecord; i <= finishRecord; i++) {
                recordsView.push(records[i]);
            }
            console.log('recordsView=' + recordsView);

            resultTableBodyView = $("#tmpResultTableBody").html();
            $('#tableBody').append(_.template(resultTableBodyView, {recordsView: recordsView}));

            if (currentPage == 1 && pagesCount == 1) { 
                $('#firstPage').attr('disabled',true);
                $('#prevPage').attr('disabled',true);                
                $('#nextPage').attr('disabled',true);  
                $('#lastPage').attr('disabled',true);  
            } 
            else if (currentPage == 1) {
                $('#firstPage').attr('disabled',true);
                $('#prevPage').attr('disabled',true);                
                $('#nextPage').removeAttr('disabled');
                $('#lastPage').removeAttr('disabled');
            }
            else if (currentPage == pagesCount) {
                $('#firstPage').removeAttr('disabled');
                $('#prevPage').removeAttr('disabled');              
                $('#nextPage').attr('disabled',true);  
                $('#lastPage').attr('disabled',true);  
            }
            else {
                $('#firstPage').removeAttr('disabled');
                $('#prevPage').removeAttr('disabled');              
                $('#nextPage').removeAttr('disabled'); 
                $('#lastPage').removeAttr('disabled');                 
            }       
        }

        // <!-- ACTION FUNCTION -->
        $('#nextPage').click( function(action) {
            console.log('from nexrPage()');
            var currentPage =  parseInt($("#currentPage").val());
            $("#currentPage").val(currentPage + 1);
            paginationControl(records);

        });

        $('#prevPage').click( function(action) {
            console.log('from prevPage()');
            var currentPage =  parseInt($("#currentPage").val());
            $("#currentPage").val(currentPage - 1);
            paginationControl(records);

        });

        $('#firstPage').click( function(action) {
            console.log('from firstPage()');
            $("#currentPage").val(1);
            paginationControl(records);
        });

        $('#lastPage').click( function(action) {
            console.log('from lastPage()');
            var lastPage = $("#pagesCount").text();
            $("#currentPage").val(lastPage);
            paginationControl(records);
        });

        // var direction;
        $("#tableHead").click( function(currentRow) {
            console.log('from tableHead()');
            activeField = currentRow.target || currentRow.srcElement;
            if (activeField.tagName != 'TD') {
                return;
                // activeField = activeField.
            }                    

            if ($(activeField).attr('direction') == 'asc') {
                direction = false;
            } 
            else {
                direction = true;
            }
            console.log('direction=' + direction);

            $(activeField).find( "span").remove();
            runQuery(activeField.textContent.trim(), direction);
        });

        $("#tableBody").click( function(action) {
            console.log('from tableBody click');
            currentCell = action.target || action.srcElement;
            console.log('currentCell=' + currentCell.textContent.replace(/\r|\n/g, '').trim());

            if(currentCell.tagName == 'INPUT') {
                return;
            } else if ($(currentCell).attr('type') == 'PICKLIST') {
                // console.log('FROM PICKLIST CLOCKED');
                // oldValue = currentCell.textContent.replace(/\r|\n/g, '').trim();
                // values = {names : ['select1', 'select2', 'select3']};
                // selecValues = ['select1', 'select2', 'select3'];
                // selectView = $("#tmpPicklist").html();
                // $(currentCell).append(_.template(selectView, values));
                // return;
            }

            // oldValue = currentCell.textContent;
            oldValue = currentCell.textContent.replace(/\r|\n/g, '').trim();

            console.log('oldValue=' + oldValue); 
            console.log('edit=' + $(currentCell).attr('edit'));

            $(currentCell).empty();
            object = {
                value: oldValue,
                dataType: $(currentCell).attr('type'),
                edit: $(currentCell).attr('edit')

            };           
            console.log('object.oldValue=' + object); 

            inputView = $("#tmpInput").html();
            $(currentCell).append(_.template(inputView, {object: object}));

            var inputElement = $('#edit');
            

            if ($(currentCell).attr('type') == 'DATE') {
                openDatepicker(inputElement);
            } 
            else if ($(currentCell).attr('type') == 'PICKLIST') {

            }   
            else {
                $(inputElement).focus();
                $(inputElement).blur(function() {                
                    var val = $(this).val();
                    $(this).parents("tr").attr("type", "Edited");
                    $(this).parent().empty().html(val);
                    $("#buttonEditBlock").show();
                });
            }        
            // var val = inputElement.val();
            // $(val).parents("tr").attr("type", "Edited");
            // $(val).parent().empty().html(val);
            // $('#buttonEditBlock').show();

            // if ($(currentCell).attr('type') == 'DATE') {
            //     openDatepicker(currentCell, 'edit');
            // }

            // $(currentCell).find('input').blur(function() {                
            //     var val = $(this).val();
            //     $(this).parents("tr").attr("type", "Edited");
            //     $(this).parent().empty().html(val);
            //     $('#buttonEditBlock').show();
            // }); 

        });
    </script>




    <!-- UNDERSCORE TEMPLATES -->
    <script type="text/template" id="tmpPicklist">
        <!-- <% console.log('from temp1 =' + this.innerHTML) %> -->
        <% console.log('from temp1.1 =' + values) %>
        <% console.log('from temp1.1.names =' + values.names) %>
        <!-- <select id="picklistSelect" onchange="changePicklist(this)"> -->
        
        
            
            <ul class="dropdown">
                <li class="dropdown-top">
                    <a class="dropdown-top" href="/">default value</a>
                    <ul class="dropdown-inside">
                        <% _.each(values.names, function(value) { %>
                            <li><a href="/"><%= value %></a></li>
                        <% }); %> 
                    </ul>
                </li>
            </ul>
            
        

        
<!--         <% _.each(this, function(name) { %> 
            <% console.log('from temp2 =' + name) %>
            <li><%= name %></li> 
        <% }); %> -->
        <!-- <select id="picklistSelect" onchange="changePicklist(this)">  -->

<!--             <% for(var iter in names) { %>
               <option value="<%= names[iter] %>"><%= values[names] %></option>
           <% } %>   -->

    <!--         <% _.each(picklistValues, function(value, key, list) { %>
              
                value
            <% }); %> -->
        <!-- </select> -->
    </script>

    

    <script type="text/template" id="tmpInput">
        <%  disabled = "disabled"; %>
        <%  if (object.edit == 'true') { disabled = '' } %>        
        <input id="edit" type="text" value="<%= object.value %>" <%= disabled %> />
<!--         <% 
        if (disabled='') {
            $(#edit).focus();
        }
        if (object.dataType == 'DATE' && disabled == '') {
            openDatepicker(this, 'edit');
        }
        %> -->
    </script>

    <script type='text/template' id="tmpTableNames">
        <select id="selectTableNames" onchange="getFields(this)">   
            <% _.each(tables, function(table, key, list) { %>
                <option value="<%= table.name %>"><%= table.name %></option>
            <% }); %>
        </select>
    </script>

    <script type='text/template' id="tmpFieldNames">
        <div>
            <select id="selectFieldNames" multiple="multiple" size="10" >   
                <% _.each(fields, function(field, key, list) { %>
                    <option value="<%= field.name %>"><%= field.name %></option>
                <% }); %>
            </select>
        </div>
        <div>
            <button onclick="runQuery('Id', true);" >Run query</button>
        </div>
    </script>

    <script type="text/tmplate" id="tmpResultTableHead">
            <!-- <thead id="tableHead"> -->
                <tr>
                    <% _.each(heads, function(head, key, list) { %>
                        <%  sortClass = ""; direction = ''  %>
                        <%  if (head.isSort) { if(head.direction) { direction = '&#9650;'; sortClass = "asc";  } else {direction = '&#9660;';sortClass = "desc";} } %>
                        <td edit="<%= head.isEdit %>" direction="<%= sortClass  %>"><%= head.name %><span><%= direction %></span> </td>
                        <!-- <th><%= head.name + '&#9650;' %></th> -->
                    <% }); %>
                </tr>
         <!--    </thead>    -->  
    </script>

    <script type="text/tmplate" id="tmpResultTableBody">
            <!-- <tbody> -->
                <% _.each(recordsView, function(record, key, list) { %>
                    <tr> 
                        <% _.each(record.object.fieldsList, function(field, key, list) { %>
                            <td type="<%= field.fieldType %>" edit="<%= field.isEdit %>" > 
                            <% if (field.fieldType == 'DATE' && !!field.fieldValue) { %>
                                    <!-- console.log('from body template date=' + field.fieldValue); -->
                                    <!-- field.fieldValue = '2016-12-24'; -->
                                    <!-- field.fieldValue = getDataView(field.fieldValue, true); -->
                                    <%= getDataView(field.fieldValue, true) %>
                            <% } else if (field.fieldType == 'DATETIME' && !!field.fieldValue) { %>
                                    <!-- field.fieldValue = getDataView(field.fieldValue, false); -->
                                    <%= getDataView(field.fieldValue, false) %>
                            <% } else if (field.fieldType == 'REFERENCE' && !!field.fieldValue) { %>
                                   <a target="_blank" href="<%= getReference(field.fieldValue) %>"> <%= field.fieldValue %> </a>
                            <% } else if (field.fieldType == 'PICKLIST') { %>                                
                             <!--        <ol>
                                      <li>Coffee</li>
                                      <li>Tea</li>
                                      <li>Milk</li>
                                    </ol> -->
                                        <%= field.fieldValue %>  
                                    
       

                            <% } else { %>
                                <%= field.fieldValue %>  




                            <% } %>                             
                            </td> 
                        <% }); %>
                        <!-- <td><%= record.object.fieldsList[0].fieldValue %></td>                     -->
                    </tr>
                <% }); %>
            <!-- </tbody>      -->
    </script>




       
<!--     <script type="text/javascript"> 
        

        $("#hello").click( function() {
            console.log('hello clicked');
        });   
    </script> -->

</apex:page>