<apex:page showHeader="false" sidebar="false" standardStylesheets="false" controller="GetRecordsWithJsUCController">
    <apex:includeScript value="https://ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js" />
    <apex:includeScript value="{!$Resource.undercore}"/>

    <script src="{!URLFOR($Resource.jqueryui, 'jquery-ui-1.12.1.custom/jquery-ui.min.js')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.jqueryui, 'jquery-ui-1.12.1.custom/jquery-ui.css')}"/>

    <!-- <apex:stylesheet value="{!URLFOR($Resource.styles, 'loader_grey.css')}" /> -->
    <!-- <apex:stylesheet value="{!URLFOR($Resource.styles, 'picklistEditing.css')}" /> -->
    <!-- <apex:stylesheet value="{!URLFOR($Resource.styles, 'table.css')}" /> -->
    <!-- <apex:stylesheet value="{!URLFOR($Resource.styles, 'main.css')}" /> -->

    <style type="text/css">
      .cellEdited {
          color: red;
      }

      .oldValue,
      .inputEdit,
      .returnOldValue,
      .saveRecord {
        display: none;
      }


      /*STYLES FOR ANIMATION NEW PAGE*/
    body {
        /*width: 100%;*/
        /*height:100%;*/
        background: #f0c60a;
        overflow-x: hidden;
        overflow-y: auto;
    }

    .content{
    /*right: 40px;*/
    /*left: 280px;*/
    top: 0px;
    position: absolute;
    /*position: all;*/
    /*padding-bottom: 30px;*/
    text-align: center; /**/
    width: 100%;
    height: 100%;
    margin: 0 auto; 
    }

    .content h2{
        /*font-size: 55px;*/
        /*padding: 10px 0px 20px 0px;*/
        /*margin-top: 52px;*/
        /*color: #fff;*/
        /*color: #000000;*/

        /*color: rgba(255,255,255,0.9);*/
        /*text-shadow: 0px 1px 1px rgba(0,0,0,0.3);*/
    }

    .content p{
        /*font-size: 18px;*/
        /*padding: 10px;*/
        /*line-height: 24px;*/
        /*color: #fff;*/
        /*color: #000000;*/
        /*display: inline-block;*/
        /*background: black;*/
        /*padding: 10px;*/
        /*margin: 3px 0px;*/
    }

    .panel{
        /*width: 100%;*/
        width: 98%;
        /*margin: 0 auto; */
        min-height: 100%;
        position: absolute;
        background-color: #000;
        box-shadow: 4px -4px 4px rgba(0,0,0,0.2);
        margin-left: -102%;
        z-index:2;
        -webkit-transition: all .6s ease-in-out;
        -moz-transition: all .6s ease-in-out;
        -o-transition: all .6s ease-in-out;
        -ms-transition: all .6s ease-in-out;
        transition: all .6s ease-in-out;
    }

    .panel:target{
        margin-left: 0%;
        background-color: #fcec0a;
        /*background-color: #dfedf3;*/
    }


    /*STYLES FOR POPUP MENU*/

    /* popup menu */
    .b-popup{
        width:99%;
        /*min-height:100%;*/
        height: 100%;
        background-color: rgba(0,0,0,0.5);
        overflow:hidden;
        position:fixed;
        top:0px;
         
        z-index: 3;
    }

    .b-popup .b-popup-content {
        /*margin:40px auto 0px auto;*/
        /*margin: auto;*/
        width:20%;
        height: 40%;
        padding:10px;
        /*background-color: #c5c5c5;*/
        /*border-radius:5px;*/
        /*box-shadow: 0px 0px 10px #000;*/
        text-align: center;
        position:absolute;
        left:50%;
        top:50%;
        margin-top: -10%;
        margin-left: -10%;
        /*margin: -20% 0 0 -10%;*/
    }

    .b-container {
        width:100%;
        height:100%;
        
        margin:0px auto;
        padding:10px;
        font-size:30px;
        color: #fff;
    }

    div.block {
        /*background: #3914AF;*/
        background: #1c5d79;
        margin: 10px auto;
        padding: 10px;
        text-align: center;
        width: 40%;
    }

    #divTableNames {
        margin-bottom: 0px;
        margin-top: 30px;
    }



/*    div.selectTableNames,
    div.selectTableFields {
        background: white;
    }*/

    div.tables,
    div.names,
    div.fields,
    select {
        background: #dfedf3;
        color: black;
        font-size: 26px;
        width: 80%;
        text-align: center;
        margin: 0px auto;
        padding: 10px; 
    }

    #rowsOnPage {
        background: #dfedf3;
        color: black;
        width: auto;
        height: auto;
        font-size:13px;
        padding: 1px
    }

    #pagination {
        width: 15%;
        font-size:13px
    }

    #divTableFields {
        height:0%;
        margin-top: 0px;
        overflow:hidden;
        -moz-transition: all 1s linear;
        -o-transition: all 1s linear;
        -webkit-transition: all 1s ease;
    }

    .headerMenuTableDiv {
        /*color: #3914AF;*/
        /*color: white;
        margin-top: 50px;
        font-size: 36px;*/
        width: 15%;
        font-size:19px;
        margin: auto;
        background: #1c5d79;
        margin-top: 60px;
        margin-bottom: 10px; 
        padding: 10px;

    }

    .footerMenuTableDiv {
        width: 15%;
        font-size:19px;
        margin: auto;
        background: #1c5d79;
        margin-bottom: 10px; 
        padding: 10px;        
    }

    .footerMenuTableDiv a {
        color: white;
    }

    .button {
        background-color: #dfedf3; 
        border: none;
        color: black;
        padding: 15px 32px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 26px;
    }

    .button:hover {
        background-color: white; 

    }


    #divResultTable {
        width: 100%;
        margin: 0px auto;
    }

    #forTable {
        overflow: scroll;
        width: 96%;
        margin: 0px auto;
   }

/*    div.menuSelect,
    div.menuTable {
        width: 50%;
        margin: 0 auto; 
    }*/

/*    
    ul.dropdown li { 
    position: relative; 
    }

    ul.dropdown,
    ul.dropdown-inside {
        list-style-type: none;
        padding: 0;
    }

    ul.dropdown-inside {
        position: absolute;
        left: -9999px;
    }

    ul.dropdown li.dropdown-top {
        display: inline;
        float: left;
        margin: 0 1px 0 0;
    }

    ul.dropdown li.dropdown-top a {
        padding: 3px 10px 4px;
        display: block;
    }

    ul.dropdown a.dropdown-top { 
        background: #efefef; 
    }

    ul.dropdown 
    a.dropdown-top:hover { 
        padding: 2px 10px 5px; 
    }

    ul.dropdown 
    li.dropdown-top:hover 
    .dropdown-inside {
        display: block;
        left: 0;
    }

    ul.dropdown 
    .dropdown-inside { 
        background: #fff; 
    }

    ul.dropdown 
    .dropdown-inside 
    a:hover { 
        background: #efefef; 
    }*/


    /*STYLES FOR SPINER*/


    .loader,
    .loader:before,
    .loader:after {
        background: white;
        /*background: #3914AF;*/

        -webkit-animation: load1 1s infinite ease-in-out;
        animation: load1 1s infinite ease-in-out;
        width: 1em;
        height: 4em;
    }

    .loader {
        color: white;
        /*color: #3914AF;*/
        text-indent: -9999em;
        margin: 88px auto;
        position: relative;
        font-size: 11px;
        -webkit-transform: translateZ(0);
        -ms-transform: translateZ(0);
        transform: translateZ(0);
        -webkit-animation-delay: -0.16s;
        animation-delay: -0.16s;
    }

    .loader:before,
    .loader:after {
        position: absolute;
        top: 0;
        content: '';
    }

    .loader:before {
        left: -1.5em;
        -webkit-animation-delay: -0.32s;
        animation-delay: -0.32s;
    }

    .loader:after {
        left: 1.5em;
    }

    @-webkit-keyframes load1 {
        0%,
        80%,
        100% {
            box-shadow: 0 0;
            height: 8em;
        }
        40% {
            box-shadow: 0 -2em;
            height: 10em;
        }
    }

    @keyframes load1 {
        0%,
        80%,
        100% {
            box-shadow: 0 0;
            height: 8em;
        }
        40% {
            box-shadow: 0 -2em;
            height: 10em;
        }
    } 

    /*FOR TABLE*/

   

  table {
        width:100%;
        margin:0;
        padding:0;
        font-family:"Trebuchet MS",Trebuchet,Arial,sans-serif;
        color:#1c5d79;
        
    }
    
    table,td,th,tr {
        border-collapse:collapse        
    }

    caption {
        margin:0;
        padding:0;
        background:#f3f3f3;
        height:40px;
        line-height:40px;
        text-indent:28px;
        font-family:"Trebuchet MS",Trebuchet,Arial,sans-serif;
        font-size:14px;
        font-weight:700;
        color:#555d6d;
        text-align:left;
        letter-spacing:3px;
        border-top:dashed 1px #c2c2c2;
        border-bottom:dashed 1px #c2c2c2
    }

    thead {
        background-color:#FFF;
        border:none
    }
    
    thead tr th {
        height:32px;
        line-height:32px;
        text-align:center;
        color:#1c5d79;
        /*background-image:url(col_bg_new.gif);*/
        background-repeat:repeat-x;
        border-left:solid 1px #F90;
        border-right:solid 1px #F90;
        border-collapse:collapse;
        font-size:15px !important;
    }

    tbody tr {
        background:#dfedf3;
        font-size:13px
    }

    tbody tr.odd {
        background:azure
    }

    tbody tr.odd:hover,
    tbody tr:hover {
        background:#fff
    }

    tbody tr td,
    tbody tr th {
        padding:6px;
        border:1px solid #326e87
    }

    tbody tr th {
        background:#1c5d79;
        font-family:"Trebuchet MS",Trebuchet,Arial,sans-serif;
        font-size:12px;
        padding:6px;
        text-align:center;
        font-weight:700;
        color:#FFF;
        border-bottom:solid 1px #fff
    }

    tbody tr th:hover {
        background:#fff
    }

    /*table a {
        color:#F60;
        text-decoration:none;
        font-size:13px;
        border-bottom:solid 1px #fff
    }*/

    /*table a:hover {
        color:#F90;
        border-bottom:none
    }*/

    /*tfoot {
        background:#f3f3f3;
        height:24px;
        line-height:24px;
        font-family:"Trebuchet MS",Trebuchet,Arial,sans-serif;
        font-size:14px;
        font-weight:700;
        color:#555d6d;
        text-align:center;
        letter-spacing:3px;
        border-top:solid 2px #326e87;
        border-bottom:dashed 1px #c2c2c2
    }

    tfoot tr th {
        border-top:solid 1px #326e87
    }

    tfoot tr td {
        text-align:right
    }*/

    </style>
<body>
    <div class="b-popup" id="popup1" >
        <div id="picklist" class="b-popup-content">
          
        </div>
    </div>

    <div id="dialog-message" title="Download complete">
        <p>Hello world dialog</p>
    </div>

    <div class="b-popup" id="popup2" >
      <div id="timepicker" class="b-popup-content">
        <div>Set time:</div>
        <div id="hourPicker">
          H:
          <button id="minusHour" onmouseup="isPressed=false;changeTimeFast(-3600);" onmousedown="isPressed=true;changeTimeFast(-3600);">-</button>
          <input type="text" value="0" id="inputHour" disabled="disabled" size="2" /> 
          <button id="plusHour" onmouseup="isPressed=false;changeTimeFast(3600);" onmousedown="isPressed=true;changeTimeFast(3600);">+</button>
        </div>
        <div id="minutPicker">
          M:
          <button id="minusMinut" onmouseup="isPressed=false;changeTimeFast(-60);" onmousedown="isPressed=true;changeTimeFast(-60);">-</button>
          <input type="text" value="0" id="inputMinut" disabled="disabled" size="2" />
          <button id="plusMinut" onmouseup="isPressed=false;changeTimeFast(60);" onmousedown="isPressed=true;changeTimeFast(60);">+</button>
        </div>
        <div id="secPicker">
          S:
          <!-- onclick="changeTime(-1)" -->
          <button id="minusSec"  onmouseup="isPressed=false;changeTimeFast(-1);" onmousedown="isPressed=true;changeTimeFast(-1);" >-</button>
          <input type="text" value="0" id="inputSec" disabled="disabled" size="2" />
          <button id="plusSec" onmouseup="isPressed=false;changeTimeFast(1);" onmousedown="isPressed=true;changeTimeFast(1);">+</button>
        </div>
        <div id="btnTimePicker">
            <button id="btnTimePicker" onclick="setTime();">Set</button>
        </div>
      </div>
    </div>

<!--   <div class="b-container">
    <div class="parent">

      <div id="Errors" class="block"></div>      
      
      <div id="divTableNames" class="block" ></div>
      <div id="divTableFields" class="block" ></div>
      
      <div id="spiner" class="loader" ></div>
    </div>

    <div id="divResultTable">
        <table id="resultTableTag" class="table-fill">
            <thead id="tableHead"></thead>
            <tbody id="tableBody" class="table-hover"></tbody>            
        </table>    

        <div id="pagination" class="block">
            <select id="rowsOnPage" onchange="changePagination(this)">
                <option value="5" >5</option>
                <option value="10" >10</option>
                <option value="18" >18</option>
                <option value="25" >25</option>
                <option value="50" >50</option>
            </select>

            <button id="firstPage">&lt;&lt;</button>
            <button id="prevPage">&lt;</button>
            <input disabled="disabled" id="currentPage" type="text" value="1" size="3" />
            <span id="pagesCount"></span>
            <button id="nextPage">&gt;</button>
            <button id="lastPage">&gt;&gt;</button>
        </div>
    </div>

    <div id="buttonEditBlock" class="block">
        <button onclick="editRows()" id="buttonEdit" >Change</button>
    </div>
  </div> -->


     

    <div class="b-popup" id="popupSpiner" >
        <div id="picklist" class="b-popup-content">
            <div id="spiner" class="loader" ></div>
        </div>
    </div>

    <div class="b-container"> 
        <div id="menuSelect" class="content">
            <!-- <div class="headerMenuSelectDiv">Select menu</div> -->
    <!--         <div>Select table:</div>
            <div>Select fields:</div> -->

            <div id="divTableNames" class="block" ></div>
            <div id="divTableFields" ></div>
            

            <a id="linkToMenuTable" href="#menuTable" style="display: none">Contact</a>
            <!-- ... -->
        </div>
        <!-- /Home -->
         
         
        <!-- Contact -->
        <div id="menuTable" class="panel">
            <div class="content">
                <div class="headerMenuTableDiv">Table menu</div>

                <div id="divResultTable">
                    <div id="forTable">                    
                        <table id="resultTableTag" class="table-fill" border="1">
                            <thead id="tableHead"></thead>
                            <tbody id="tableBody" class="table-hover"></tbody>            
                        </table>    
                    </div>
                    <div id="pagination" class="block">
                        <select id="rowsOnPage" onchange="changePagination(this)">
                            <option value="5" >5</option>
                            <option value="10" >10</option>
                            <!-- <option value="18" >18</option> -->
                            <option value="25" >25</option>
                            <option value="50" selected="selected" >50</option>
                        </select>

                        <button id="firstPage">&lt;&lt;</button>
                        <button id="prevPage">&lt;</button>
                        <input disabled="disabled" id="currentPage" type="text" value="1" size="3" />
                        <span id="pagesCount"></span>
                        <button id="nextPage">&gt;</button>
                        <button id="lastPage">&gt;&gt;</button>
                    </div>
                </div>

                <div id="buttonEditBlock" class="block">
                    <button onclick="editRows()" id="buttonEdit" >Change</button>
                </div>
                <div class="footerMenuTableDiv" >
                    <a id="linkToMenuSelect" href="#menuSelect"  >&larr; Go to Select menu</a>
                </div>
            <!-- .onclick="runQuery('Id', true);".. -->
            </div>
        </div>
    </div>


</body>
    <script type="text/javascript">
        $("#Errors").text("");
        $("#spiner").show();
        /**/ spinerShow();
        $("#divResultTable").hide();
        $("#buttonEditBlock").hide();
        PopUpHide();
        TimePickerHide();

        Visualforce.remoting.Manager.invokeAction(
            "{!$RemoteAction.GetRecordsWithJsUCController.getTableNames}",            
            function(result, event) {
                $("#spiner").hide();
                /**/ spinerHide();
                if (event.status) {
                    tables = [];
                    for (var iter = 0; iter < result.length; iter++) {  
                        tables.push({name: result[iter]}); 
                    }     
                    tableNamesView = $("#tmpTableNames").html();
                    $("#divTableNames").append(_.template(tableNamesView, {tables: tables}));               
                } 
                else if (event.type === 'exception') {
                    $("#Errors").text(event.message + ". Look:" + event.where);
                } 
                else {
                    $("#Errors").text(event.message);
                }
            },
            {escape: false}
        );

/***********************************************REMOTE ACTION FUNCTIONS***********************************************/
        function getFields(tableName) { 
            $("#Errors").text("");
            $("#divTableFields").empty();
            // $("#divTableFields").css({"height":"0%","overflow":"hidden", "-webkit-transition":"all 1s linear"});
            $("#divTableFields").css({"height":"0%"});


            $("#spiner").show();
            /**/ spinerShow();

            $("#divResultTable").hide();
            $("#buttonEditBlock").hide();  

            Visualforce.remoting.Manager.invokeAction(
                "{!$RemoteAction.GetRecordsWithJsUCController.getFields}",
                tableName.value,
                function(result, event) {
                    if (event.status) {      
                        $("#spiner").hide(); 
                        /**/ spinerHide();                      
                        fields = [];
                        for (var iter = 0; iter < result.length; iter++) {  
                            fields.push({name: result[iter]}); 
                        }
                        if (fields.length > 0) {                        
                            tableFieldsView = $("#tmpFieldNames").html();
                            $("#divTableFields").append(_.template(tableFieldsView, {fields: fields}));
                        }
                        $("#divTableFields").css({"height":"100%"});
                    } 
                    else if (event.type === "exception") {
                        $("#Errors").text(event.message + ". Look:" + event.where);
                    } 
                    else {
                        $("#Errors").text(event.message);
                    }
                },
                {escape: false}
            );                        
        }

        function runQuery(field, direction) {
            $("#Errors").text("");
            $("#spiner").show();
            /**/ spinerShow();
            $("#divResultTable").hide();
            $("#tableHead").empty();
            $("#tableBody").empty();
            $("#buttonEditBlock").hide();

            /**/
            console.log("from runQuery()");
            /**/

            tableName = $("#selectTableNames").val();
            fieldsName = $("#selectFieldNames").val(); 
            if (_.indexOf(fieldsName, "Id") == -1) { 
                fieldsName.unshift("Id");
            }

            Visualforce.remoting.Manager.invokeAction(
                "{!$RemoteAction.GetRecordsWithJsUCController.runQuery}",
                tableName,
                fieldsName,
                field,
                direction,
                function(result, event) {
                    //add handler
                    //сделать все ремоут глобальными
                    if (event.status) {   
                        $("#spiner").hide();
                        /**/ spinerHide();
                        $("#currentPage").val(1);  
                        $("#divResultTable").show();

                        if (result.length == 0) {
                            $('#divResultTable').hide();
                            return;
                        }
                        //for head
                        heads = [];
                        for (var iter = 0; iter < fieldsName.length; iter++) {
                            if (fieldsName[iter] == field) {
                                heads.push({
                                    "name" : fieldsName[iter],
                                    "isSort" : true,
                                    "direction" : direction,
                                    "isEdit" : result[0].fieldsList[iter].isEdit
                                });
                            }
                            else {
                                heads.push({
                                    "name" : fieldsName[iter],
                                    "isSort" : false,
                                    "direction" : direction,
                                    "isEdit" : result[0].fieldsList[iter].isEdit
                                });
                            }
                        }

                        resultTableHeadView = $("#tmpResultTableHead").html();
                        $('#tableHead').append(_.template(resultTableHeadView, {heads: heads}));

                        records = [];
                        for (var iter = 0; iter < result.length; iter++) {
                            records.push({
                                object: result[iter]
                            });
                        }
                        paginationControl(records);
                        console.log("before link had clicled ");
                        console.log("link= " + $("#linkToMenuTable").text());

                        // $("#linkToMenuTable").trigger('click');

                        window.location.href = $('#linkToMenuTable').attr('href');


                        // $('#linkToMenuTable').on('click', function(e) {
                        //   console.log("on click linkT2oMenuTable!");  
                        //   // $('#linkToMenuTable')[0].click();
                        //   // e.preventDefault();
                        // });
                        console.log("after link had clicled ");

                    }
                    else if (event.type === 'exception') {
                        $("#Errors").text(event.message + ". Look:" + event.where);
                    } 
                    else {
                        $("#Errors").text(event.message);
                    }
                },
                {escape: false}
            );
        }

        function editRows() {
            $("#Errors").text("");
            $("#spiner").show();
            $("#buttonEditBlock").hide();
            $(".cellEdited").removeClass("cellEdited");
            
            var tableForChange = [];
            $("#resultTableTag thead>tr,#resultTableTag tr[type='Edited']").each(function() { 
                var arrayCurrentRow = [];
                var elementCurrentRow = $(this).find("td, th");
                if (elementCurrentRow.length > 0) {
                    elementCurrentRow.each(function() {
                        if( $(this).attr("edit") == "true" || $(this).index() == 0) {
                            cellValue = $(this).clone().children().remove().end().text().replace(/\r|\n/g, "").trim(); 
                            arrayCurrentRow.push(cellValue);                            
                        }
                    });
                    tableForChange.push(arrayCurrentRow);
                }
            });

            var myJsonString = JSON.stringify(tableForChange);
            var tableName = $("#selectTableNames").val();

            Visualforce.remoting.Manager.invokeAction(
                "{!$RemoteAction.GetRecordsWithJsUCController.saveListObjects}",
                myJsonString,
                tableName,
                function(result, event) {
                    if (event.status) {
                        $("#spiner").hide();
                        $("#Errors").text("Your change saved!!!");
                    }       
                    else if (event.type === 'exception') {
                        $("#spiner").hide();
                        runQuery("Id", true);
                        $("#Errors").text("Your change did not save! Error:" + event.message + ". Look:" + event.where);
                    } 
                    else {
                        $("#spiner").hide();
                        runQuery("Id", true);       
                        $("#Errors").text("Your change did not save! Error:" + event.message);                                         
                    }
                },
                {escape: false}
            );
        }

//******************************SUPPORT FUNCTIONS**********************************************************************************************

          function cancelSelect() {
            $("#picklist").empty();
            PopUpHide();
          }

          function selectedPickList() {
            var newValue = $("#picklistValues option:selected").text();
            var picklistValue;
            if ($("#picklistValues").attr("multiple")) {
              picklistValue = $("#picklistValues").val().join(';');
            }
            else {
              picklistValue = $("#picklistValues").val();
            }            

            $(currentCell).text(picklistValue);           
            $("#picklist").empty();
            PopUpHide();
            if (picklistValue == oldValue) {
              return;
            }
            $('#buttonEditBlock').show();
            $(currentCell).parents("tr").attr("type", "Edited");
            $(currentCell).children(".returnOldValue").show();
            // $(currentCell).addClass("cellEdited");

          }

          function PopUpShow(){
              $("#popup1").show();
          }

          function PopUpHide(){
              $("#popup1").hide();
          }

          function TimePickerShow(){
              $("#popup2").show();
          }

          function TimePickerHide(){
              $("#popup2").hide();
          }

          function spinerShow() {
            $("#popupSpiner").show();
          }

          function spinerHide() {
            $("#popupSpiner").hide();
          }

          function setTime() {   
            var hours = $("#inputHour").val();
            hours = (hours < 10) ? "0" + hours : hours;

            var minuts = $("#inputMinut").val();
            minuts = (minuts < 10) ? "0" + minuts : minuts;

            var seconds = $("#inputSec").val();
            seconds = (seconds < 10) ? "0" + seconds : seconds;

            timepickerValue = $(currentCell).text() +  " " + hours + ":" + minuts + ":" + seconds;
            $(currentCell).text(timepickerValue);

            TimePickerHide();
          }

          function changeTime(value) {
            var allSec = parseInt(getAllSeconds());
            allSec += parseInt(value);

            if (allSec < 0) {
                allSec = allSec + 24 * 60 * 60;
            } 
            else if (allSec >= 86400) {
                allSec = allSec - 24 * 60 * 60;
            }

            var seconds = allSec % 60;
            var hours = Math.floor(allSec / 3600);
            var minuts = Math.floor((allSec - seconds - hours * 3600) / 60);

            $("#inputSec").val(seconds);
            $("#inputHour").val(hours);
            $("#inputMinut").val(minuts);
          }

          var isPressed = false;
          var count = 0;
          function changeTimeFast(value) {
            if (count < 3) {
                speed = 400;
            } 
            else if (count < 9) {
                speed = 250;
            }
            else if (count < 15) {
                speed = 100;
            }
            else if (count < 22) {
                speed = 50;
            }

            if (isPressed) {
                count++;
                changeTime(value);
                setTimeout('changeTimeFast(' + value + ')', speed);
            }
            else {
                count = 0;
            }
          }

          function getAllSeconds() {
            var hours = parseInt($("#inputHour").val());
            var minuts = parseInt($("#inputMinut").val());
            var seconds = parseInt($("#inputSec").val());
            var allSec = seconds + minuts * 60 + hours * 60 * 60;
            return allSec;
          }

        function getDataView(dateFromBase, isDateOnly) {
            var myDate = new Date(dateFromBase);
            var day = myDate.getDate();
            day = (day < 10) ? "0" + day : day; 

            var month = myDate.getMonth() + 1;
            month = (month < 10) ? "0" + month : month;

            var hour = myDate.getHours();
            hour = (hour < 10) ? "0" + hour : hour;

            var minut = myDate.getMinutes();
            minut = (minut < 10) ? "0" + minut : minut;

            var second = myDate.getSeconds();
            second = (second < 10) ? "0" + second : second;

            var year = myDate.getFullYear();

            if (isDateOnly) {
                dateStr = year + '-' + month + '-' + day;
            }
            else {
                dateStr = year + '-' + month + '-' + day + ' ' + hour + ':' + minut + ':' + second;
            }

            return dateStr;
        }

        function getReference(ref) {
            return "{!baseURL}" + "/" + ref;
        }

        function openDatepicker(action) {
            var oldValue = $(action).val();

            $(action).datepicker({
                dateFormat: "yy-mm-dd",
                onSelect: function(dateText, inst) {
                    $("#buttonEditBlock").show();
                    var val = $(this).val();

                    $(this).parents("tr").attr("type", "Edited");
                    $(this).parents("td").addClass("cellEdited");
                    $(this).parent().empty().html(val);

                    if ($(currentCell).attr("type") == "DATETIME") {
                      TimePickerShow();                 
                    }
                },
                onClose: function(selectedDate) {
                    $(this).parent().empty().html(oldValue);
                }
            }).focus();
        }

        function changePagination(rowsCount) {
            $("#currentPage").val("1");
            paginationControl(records);
        }

        function paginationControl(records) {
            $("#buttonEditBlock").hide();
            $("#tableBody").empty();

            rowsPageCount = $("#rowsOnPage").val();
            recordsCount = records.length;
            pagesCount = Math.ceil(records.length/rowsPageCount);
            $("#pagesCount").empty().text(pagesCount);
            currentPage = $("#currentPage").val();

            startRecord = (currentPage - 1) * rowsPageCount;
            finishRecord = currentPage * rowsPageCount - 1;
            if (finishRecord >= recordsCount) {
                finishRecord = recordsCount - 1;
            } 

            recordsView = [];
            for (var i = startRecord; i <= finishRecord; i++) {
                recordsView.push(records[i]);
            }

            resultTableBodyView = $("#tmpResultTableBody").html();
            $("#tableBody").append(_.template(resultTableBodyView, {recordsView: recordsView}));

            if (currentPage == 1 && pagesCount == 1) { 
                $("#firstPage").attr("disabled",true);
                $("#prevPage").attr("disabled",true);                
                $("#nextPage").attr("disabled",true);  
                $("#lastPage").attr("disabled",true);  
            } 
            else if (currentPage == 1) {
                $("#firstPage").attr("disabled",true);
                $("#prevPage").attr("disabled",true);                
                $("#nextPage").removeAttr("disabled");
                $("#lastPage").removeAttr("disabled");
            }
            else if (currentPage == pagesCount) {
                $("#firstPage").removeAttr("disabled");
                $("#prevPage").removeAttr("disabled");              
                $("#nextPage").attr("disabled",true);  
                $("#lastPage").attr("disabled",true);  
            }
            else {
                $("#firstPage").removeAttr("disabled");
                $("#prevPage").removeAttr("disabled");              
                $("#nextPage").removeAttr("disabled"); 
                $("#lastPage").removeAttr("disabled");                 
            }       
        }

        var isReurnOldValue = false;
        function cellClicked(cell) {
            console.log("from cellClicked");

            if (isReurnOldValue) {
                console.log("isReurnOldValue was clicked!");
                isReurnOldValue = false;
                return;
            }
            initCell(cell);

            $(cell).children(".inputEdit").blur(function() { 
                console.log("from cellClicked blur");
                var newValue = $(cell).children(".inputEdit").val().trim();
                var oldValue = $(cell).children(".oldValue").text().trim();
                console.log("newValue=" + newValue + ";oldValue=" + oldValue);

                $(cell).children(".newValue").text(newValue);
                $(cell).children(".inputEdit").hide();
                $(cell).children(".newValue").show();
                $(cell).children(".oldValue").hide();

                if (newValue == oldValue) {
                    $(cell).children(".returnOldValue").hide();
                }
                else {
                    $(cell).children(".returnOldValue").show();
                }

                /*$(cell).parent("tr")*/ checkRecordForSave();
            });
        }

        function dateClicked(cell) {
            if (isReurnOldValue) {
                console.log("isReurnOldValue was clicked!");
                isReurnOldValue = false;
                return;
            }
            console.log("from date clicked");
            initCell(cell);

            $(cell).children(".inputEdit").datepicker({
                dateFormat: "yy-mm-dd",
                onSelect: function(dateText, inst) {

                    var newValue = dateText;
                    var oldValue = $(this).siblings(".oldValue").text().trim();

                    console.log("newValue=" + newValue + ";oldValue=" + oldValue);

                    $(cell).children(".newValue").text(dateText);
                    $(cell).children(".inputEdit").hide();         
                    $(cell).children(".oldValue").hide();
                    $(cell).children(".newValue").show();

                    if (newValue == oldValue) {
                        $(cell).children(".returnOldValue").hide();
                    }
                    else {
                        $(cell).children(".returnOldValue").show();
                    }

                },
                onClose: function(selectedDate) {
                    $(cell).children(".inputEdit").hide();
                    $(cell).children(".newValue").show();
                    // returnOldValue($(cell).children(".returnOldValue"));
                    // $(this).parent().empty().html(oldValue);
                }
            }).focus();
        }

        function picklistClicked(cell) {
            console.log("from picklistClicked()");

            if (isReurnOldValue) {
                console.log("isReurnOldValue was clicked!");
                isReurnOldValue = false;
                return;
            }
            initCell(cell);

            // oldValue = currentCell.textContent.replace(/\r|\n/g, "").trim(); 
            currentCell = cell;
            oldValue = $(cell).text().trim();
            console.log("oldValue=" + oldValue);
            var picklist = ($(cell).attr("picklist").split(",")); 
            console.log("picklist=" + picklist);
            values = {names : picklist};
            // $( "#dialog-message" ).dialog({
            //   modal: true,
            //   buttons: {
            //     Ok: function() {
            //       $( this ).dialog( "close" );
            //     }
            //   }
            // });
            PopUpShow();
            selectView = $("#tmpPicklistSelect").html();
            $("#picklist").append(_.template(selectView, values));
            return;

        }

        function returnOldValue(element) {
            console.log("from returnOldValue()");
            isReurnOldValue = true;
            // var newValue = $(cell).children(".inputEdit").val().trim();
            var oldValue = $(element).siblings(".oldValue").text().trim();
            $(element).siblings(".newValue").text(oldValue);
            $(element).hide();

            checkRecordForSave();
        }

        function initCell(cell) {
            //show and hide elements          
            $(cell).children(".inputEdit").show();
            $(cell).children(".returnOldValue").hide();
            $(cell).children(".newValue").hide();
            $(cell).children(".oldValue").hide();

            //init input tag
            $(cell).children(".inputEdit").focus();
            var value = $(cell).children(".newValue").text();
            $(cell).children(".inputEdit").val(value);
        }

        function checkRecordForSave() {
            console.log("from checkRecordForSave()");
            // console.log("element.tagName=" + element.tagName);
            // $(element > "td:[type='ID']" > ".saveRecord" ).show();
            $("#tableBody > tr").each(function(i, val) {
                console.log("this=" + this);
                console.log("this.tagName=" + this.tagName);

                console.log("i.tagNAme=" + i.tagName);

                console.log("$(this).children(td[type='ID'] = " + $(this).children("td[type='ID']").children(".saveRecord").text());

                if ($(this).children("td").children(".returnOldValue").is(':visible')) {
                    $(this).children("td[type='ID']").children(".saveRecord").show();   
                }
                else {
                    $(this).children("td[type='ID']").children(".saveRecord").hide();
                }
            });
        }

//****************************************************ACTION FUNCTIONS***************************************************************
        $("#nextPage").click( function(action) {
            var currentPage =  parseInt($("#currentPage").val());
            $("#currentPage").val(currentPage + 1);
            paginationControl(records);

        });

        $("#prevPage").click( function(action) {
            var currentPage =  parseInt($("#currentPage").val());
            $("#currentPage").val(currentPage - 1);
            paginationControl(records);

        });

        $("#firstPage").click( function(action) {
            $("#currentPage").val(1);
            paginationControl(records);
        });

        $("#lastPage").click( function(action) {
            var lastPage = $("#pagesCount").text();
            $("#currentPage").val(lastPage);
            paginationControl(records);
        });

        $("#tableHead").click( function(currentRow) {
            var activeField = currentRow.target || currentRow.srcElement;
            if (activeField.tagName != "TH") {
                return;
            }                    

            if ($(activeField).attr("direction") == "asc") {
                direction = false;
            } 
            else {
                direction = true;
            }

            $(activeField).find( "span").remove();
            runQuery(activeField.textContent.trim(), direction);
        });

        // $("#tableBody").click( function(action) {
        //     $("#Errors").text("");
        //     currentCell = action.target || action.srcElement;
        //     if ($(currentCell).attr("edit") == "false") {
        //         return;
        //     }
        //     else if(currentCell.tagName == "INPUT" || currentCell.tagName == "A") {
        //         return;
        //     }
        //     else if($(currentCell).attr("type") == "REFERENCE") {
        //         return;
        //     }
        //     else if ($(currentCell).attr("type") == "PICKLIST" || $(currentCell).attr("type") == "MULTIPICKLIST") {    
        //         oldValue = currentCell.textContent.replace(/\r|\n/g, "").trim(); 
        //         var picklist = ($(currentCell).attr("picklist").split(",")); 
        //         values = {names : picklist};
        //         PopUpShow();
        //         selectView = $("#tmpPicklistSelect").html();
        //         $("#picklist").append(_.template(selectView, values));
        //         return;
        //     }
        //     else if (typeof $(currentCell).attr("type") == "undefined") {
        //         return;
        //     }

        //     oldValue = currentCell.textContent.replace(/\r|\n/g, '').trim();

        //     $(currentCell).empty();
        //     object = {
        //         value: oldValue,
        //         dataType: $(currentCell).attr("type"),
        //         edit: $(currentCell).attr("edit")
        //     };           

        //     inputView = $("#tmpInput").html();
        //     $(currentCell).append(_.template(inputView, {object: object}));

        //     var inputElement = $("#edit");
        //     if ($(currentCell).attr("type") == "DATE" || $(currentCell).attr("type") == "DATETIME" ) {
        //         openDatepicker(inputElement);
        //     }  
        //     else {
        //         $(inputElement).focus();
        //         $(inputElement).blur(function() {                
        //             var val = $(this).val();
        //             if (val == oldValue) {
        //               $(this).parent().empty().html(val);
        //               return;                      
        //             }
        //             $(this).parents("tr").attr("type", "Edited");
        //             $(this).parents("td").addClass("cellEdited");

        //             $(this).parent().empty().html(val);
        //             $("#buttonEditBlock").show();
        //         });
        //     }
        // });        

        $(window).keydown(function(event) {      
            //pressed enter      
            if(event.keyCode == 13) {   
                $("#edit").blur();
                $("#buttonEditBlock").show();
                $("#edit").parent("tr").attr("class", "Edited");
            }

            //pressed Esc
            if(event.keyCode == 27) {  
                $("#picklist").empty();
                PopUpHide();                
                $('#edit').parent().empty().html(oldValue);
                $('#edit').blur();
            }
        });

    </script>




<!--******************************************************** UNDERSCORE TEMPLATES ***********************************************************-->
    <script type="text/template" id="tmpPicklistSelect">
      <div>
      <% var multiPicklist = ''; %>
      <%  if ($(currentCell).attr('type') == 'MULTIPICKLIST') { multiPicklist = "multiple"; } %>  
      <select id="picklistValues" <%= multiPicklist %> >        
        <% _.each(values.names, function(value, key) { %>
          <option value="<%= value %>"><%= value %></option>
         <% }); %> 
      </select>
      </div>
      <div>
        <button id="getSelect" onclick="selectedPickList();" >SELECT</button>
        <button id="cancelSelect" onclick="cancelSelect();" >CANCEL</button>
      </div>
    </script>    

    <script type="text/template" id="tmpInput">
        <%  disabled = "disabled"; %>
        <%  if (object.edit == 'true') { disabled = '' } %>        
        <!-- onclick for date -->
        <input id="edit" type="text" value="<%= object.value %>" <%= disabled %>  />
    </script>

    <script type="text/template" id="tmpTableNames">
        <div class="tables">
            <label for="tables">Select table:</label>
            <select name="tables" id="selectTableNames" onchange="getFields(this)">   
                <% _.each(tables, function(table, key, list) { %>
                    <option value="<%= table.name %>"><%= table.name %></option>
                <% }); %>
            </select>
        </div>
    </script>

    <script type="text/template" id="tmpFieldNames">
        <div class="block">
            <div class="fields">
                <label for="fieldsSelect">Select fields:</label>
                <select name="fieldsSelect" id="selectFieldNames" multiple size="10" >   
                    <% _.each(fields, function(field, key, list) { %>
                        <option value="<%= field.name %>"><%= field.name %></option>
                    <% }); %>
                </select>
            </div>
        </div>
        <div class="block">
            <button onclick="runQuery('Id', true);" class="button" >Run query</button>
        </div>
    </script>

    <script type="text/tmplate" id="tmpResultTableHead">
        <tr>
            <% _.each(heads, function(head, key, list) { %>
                <%  sortClass = ""; direction = ''  %>
                <%  if (head.isSort) { if(head.direction) { direction = '&#9650;'; sortClass = "asc";  } else {direction = '&#9660;';sortClass = "desc";} } %>
                <th class="text-left" edit="<%= head.isEdit %>" direction="<%= sortClass  %>"><%= head.name %><span><%= direction %></span> </th>
              
            <% }); %>
        </tr>
    </script>

<!--     <script type="text/tmplate" id="tmpResultTableBody">
        <% _.each(recordsView, function(record, key, list) { %>
            <tr> 
                <% _.each(record.object.fieldsList, function(field, key, list) { %>
                    <% if (field.fieldType == 'DATE' && !!field.fieldValue) { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" > 
                            <%= getDataView(field.fieldValue, true) %>
                        </td> 
                    <% } else if (field.fieldType == 'DATETIME' && !!field.fieldValue) { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" > 
                            <%= getDataView(field.fieldValue, false) %>
                        </td> 
                    <% } else if (field.fieldType == 'REFERENCE' && !!field.fieldValue) { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" > 
                            <a target="_blank" href="<%= getReference(field.fieldValue) %>"> <%= field.fieldValue %> </a>
                        </td> 
                    <% } else if (field.fieldType == 'PICKLIST' || field.fieldType == 'MULTIPICKLIST') { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" picklist="<%= field.picklistValues %>"> 
                            <%= field.fieldValue %>
                        </td> 
                    <% } else { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" > 
                            <%= field.fieldValue %>
                        </td> 
                    <% } %>
                <% }); %>
            </tr>
        <% }); %>
    </script> -->

    <script type="text/tmplate" id="tmpResultTableBody">
        <% _.each(recordsView, function(record, key, list) { %>
            <tr> 
                <% _.each(record.object.fieldsList, function(field, key, list) { %>
                    <% if (field.fieldType == 'ID') { %>  
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" >  
                            <span class="newValue"> <%= field.fieldValue %> </span>                    
                            <span class="saveRecord" onclick="saveRecord(this);" > 
                                    SPARTA!!!!!!!
                                    <img src="/img/permissions_confirm16.gif" />
                                    <!-- <apex:image value="/img/func_icons/remove12_on.gif" />  -->
                            </span>
                            
                        </td>
                    <% } else if (field.fieldType == 'DATE') { %>
                        <td onclick="dateClicked(this);" class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" > 
                            <% console.log("from DATE. field.isEdit=" + field.isEdit); %>
                            <span class="newValue">  <%= getDataView(field.fieldValue, true) %> </span>
                            <% if (field.isEdit == true) { %>
                                <span class="oldValue"> <%= getDataView(field.fieldValue, true) %> </span>                                
                                <input class="inputEdit" type="text" value="<%= getDataView(field.fieldValue, true) %>" />
                                <span class="returnOldValue" onclick="returnOldValue(this);" > 
                                    <img src="/img/func_icons/remove12_on.gif" />
                                    <!-- <apex:image value="/img/func_icons/remove12_on.gif" />  -->
                                </span>
                            <% } %>
                        </td> 
                    <% } else if (field.fieldType == 'DATETIME' && !!field.fieldValue) { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" > 
                            <%= getDataView(field.fieldValue, false) %>
                             
                        </td> 
                    <% } else if (field.fieldType == 'REFERENCE' && !!field.fieldValue) { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" > 
                            <a target="_blank" href="<%= getReference(field.fieldValue) %>"> <%= field.fieldValue %> </a>
                        </td> 
                    <% } else if (field.fieldType == 'PICKLIST') { %>
                        <td onclick="picklistClicked(this);" class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" picklist="<%= field.picklistValues %>"> 
                            <%= field.fieldValue %>
                        <span class="returnOldValue" onclick="returnOldValue(this);" > 
                                    <img src="/img/func_icons/remove12_on.gif" />
                                    <!-- <apex:image value="/img/func_icons/remove12_on.gif" />  -->
                        </span>
                        </td>  
                    <% } else if (field.fieldType == 'MULTIPICKLIST') { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" picklist="<%= field.picklistValues %>"> 
                            <%= field.fieldValue %>
                        </td>                      
                    <% } else { %>
                        <td class="text-left" type="<%= field.fieldType %>" edit="<%= field.isEdit %>" onclick="cellClicked(this);" >
                            <span class="newValue"> <%= field.fieldValue %> </span>
                            <% console.log("from else. field.isEdit=" + field.isEdit); %>
                            <% if (field.isEdit == true) { %>
                                <% console.log("from if"); %> 
                                <span class="oldValue"> <%= field.fieldValue %> </span>                                
                                <input class="inputEdit" type="text" value="<%= field.fieldValue %>" />
                                <span class="returnOldValue" onclick="returnOldValue(this);" > 
                                    <img src="/img/func_icons/remove12_on.gif" />
                                    <!-- <apex:image value="/img/func_icons/remove12_on.gif" />  -->
                                </span>
                            <% } %>

                        </td>                         
                    <% } %>
                <% }); %>
            </tr>
        <% }); %>
<!--         <% $(".oldValue").hide(); %>
        <% $(".inputEdit").hide(); %> -->

    </script>

</apex:page>